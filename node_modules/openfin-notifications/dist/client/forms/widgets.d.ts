/**
 * These are available widgets for use in forms.
 *
 * @module FormWidgets
 */
/**
 * The StringWidgetType is how you display a text string.
 */
export declare const StringWidgetType: {
    readonly Text: "Text";
};
export declare const NumberWidgetType: {
    readonly Number: "Number";
};
export declare const BooleanWidgetType: {
    readonly Toggle: "Toggle";
    readonly Checkbox: "Checkbox";
};
export declare const WidgetType: {
    readonly Toggle: "Toggle";
    readonly Checkbox: "Checkbox";
    readonly Number: "Number";
    readonly Text: "Text";
};
/**
 * All available widgets.
 */
export declare type Widget = StringWidget | NumberWidget | BooleanWidget;
export interface BaseWidgetSpec<T extends keyof typeof WidgetType> {
    /**
     * The type of widget to be used. Widgets can only be used with matching specific data types.
     * For example the `Text` widget can be used with the `string` field type.
     */
    type: T;
}
/**
 * A simple text field input widget.
 */
export interface TextWidgetSpec extends BaseWidgetSpec<typeof WidgetType['Text']> {
    placeholder?: string;
}
/**
 * String field input widget.
 */
export declare type StringWidget = TextWidgetSpec;
export interface NumberWidgetSpec extends BaseWidgetSpec<typeof WidgetType['Number']> {
    placeholder?: string;
    min?: number;
    max?: number;
}
/**
 * Number field input widget.
 */
export declare type NumberWidget = NumberWidgetSpec;
export declare type ToggleWidgetSpec = BaseWidgetSpec<typeof WidgetType['Toggle']>;
export declare type CheckboxWidgetSpec = BaseWidgetSpec<typeof WidgetType['Checkbox']>;
export declare type BooleanWidget = ToggleWidgetSpec | CheckboxWidgetSpec;
