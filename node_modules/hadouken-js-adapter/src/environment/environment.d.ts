import { NewConnectConfig } from '../transport/wire';
import EntityType from '../shapes/EntityType';
export interface Environment {
    writeToken(path: string, token: string): Promise<string>;
    retrievePort(config: NewConnectConfig): Promise<number>;
    getNextMessageId(): any;
    getRandomId(): string;
    createChildWindow(options: any): Promise<any>;
    createChildContent(options: ChildContentOptions): Promise<any>;
    isWindowExists(uuid: string, name: string): boolean;
    getWebWindow(identity: OpenFin.Identity): Window;
    getCurrentEntityIdentity(): OpenFin.EntityInfo;
    getCurrentEntityType(): EntityType;
    raiseEvent(eventName: string, eventArgs: any): void;
    electronChildWindows: boolean;
    childViews: boolean;
}
export interface ChildContentOptions {
    options: any;
    entityType: EntityType;
}
export declare const notImplementedEnvErrorMsg = "Not implemented in this environment";
