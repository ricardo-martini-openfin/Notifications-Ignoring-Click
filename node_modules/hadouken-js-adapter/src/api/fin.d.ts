/// <reference types="node" />
import { EventEmitter } from 'events';
import Transport from '../transport/transport';
import System from './system/index';
import _WindowModule from './window/index';
import ApplicationModule from './application/index';
import InterApplicationBus from './interappbus/index';
import _NotificationModule from './notification/index';
import Clipbpard from './clipboard/index';
import ExternalApplicationModule from './external-application/index';
import ExternalWindowModule from './external-window/index';
import _FrameModule from './frame/index';
import GlobalHotkey from './global-hotkey/index';
import ViewModule from './view/index';
import PlatformModule from './platform/index';
import EntityType from '../shapes/EntityType';
import { Me } from './me';
export interface FinApi<T extends EntityType> {
    readonly System: System;
    readonly Window: _WindowModule;
    readonly Application: ApplicationModule;
    readonly InterApplicationBus: InterApplicationBus;
    readonly Notification: _NotificationModule;
    readonly Clipboard: Clipbpard;
    readonly ExternalApplication: ExternalApplicationModule;
    readonly ExternalWindow: ExternalWindowModule;
    readonly Frame: _FrameModule;
    readonly GlobalHotkey: GlobalHotkey;
    readonly View: ViewModule;
    readonly Platform: PlatformModule;
    readonly me: Me<T>;
}
export default class Fin<T extends EntityType = EntityType> extends EventEmitter implements FinApi<T> {
    private wire;
    System: System;
    Window: _WindowModule;
    Application: ApplicationModule;
    InterApplicationBus: InterApplicationBus;
    Notification: _NotificationModule;
    Clipboard: Clipbpard;
    ExternalApplication: ExternalApplicationModule;
    ExternalWindow: ExternalWindowModule;
    Frame: _FrameModule;
    GlobalHotkey: GlobalHotkey;
    View: ViewModule;
    Platform: PlatformModule;
    readonly me: Me<T>;
    constructor(wire: Transport<T>);
}
