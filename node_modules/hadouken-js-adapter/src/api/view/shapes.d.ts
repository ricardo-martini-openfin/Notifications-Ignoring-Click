import { CustomRequestHeaders, Api, ContentNavigation } from '../window/windowOption';
import { ContextMenuSettings, Hotkey } from '../../shapes/shapes';
import { PreloadScript } from '../../shapes/PreloadScript';
export interface ViewInfo {
    canNavigateBack: boolean;
    canNavigateForward: boolean;
    processAffinity: string;
    title: string;
    url: string;
}
export interface AutoResizeOptions {
    /**
     * If true, the view's width will grow and shrink together with the window. false
     * by default.
     */
    width?: boolean;
    /**
     * If true, the view's height will grow and shrink together with the window. false
     * by default.
     */
    height?: boolean;
    /**
     * If true, the view's x position and width will grow and shrink proportionally with
     * the window. false by default.
     */
    horizontal?: boolean;
    /**
     * If true, the view's y position and height will grow and shrink proportionally with
     * the window. false by default.
     */
    vertical?: boolean;
}
export interface ViewOptions {
    autoResize?: AutoResizeOptions;
    contextMenuSettings?: ContextMenuSettings;
    backgroundColor?: string;
    customData?: any;
    customContext?: any;
    api?: Api;
    contentNavigation?: ContentNavigation;
    experimental?: any;
    detachOnClose?: boolean;
    isClosable?: boolean;
    preventDragOut?: boolean;
}
export interface ViewCreationOptions extends ViewOptions {
    name: string;
    url: string;
    target: OpenFin.Identity;
    customRequestHeaders?: CustomRequestHeaders[];
    bounds?: OpenFin.Bounds;
    processAffinity?: string;
    hotkeys?: Hotkey[];
    preloadScripts?: PreloadScript[];
    manifestUrl?: string;
}
