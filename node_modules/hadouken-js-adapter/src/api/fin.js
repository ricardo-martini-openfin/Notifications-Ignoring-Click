"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const events_1 = require("events");
// Import from the file rather than the directory in case someone consuming types is using module resolution other than "node"
const index_1 = require("./system/index");
const index_2 = require("./window/index");
const index_3 = require("./application/index");
const index_4 = require("./interappbus/index");
const index_5 = require("./notification/index");
const index_6 = require("./clipboard/index");
const index_7 = require("./external-application/index");
const index_8 = require("./external-window/index");
const index_9 = require("./frame/index");
const index_10 = require("./global-hotkey/index");
const index_11 = require("./view/index");
const index_12 = require("./platform/index");
const me_1 = require("./me");
class Fin extends events_1.EventEmitter {
    constructor(wire) {
        super();
        this.wire = wire;
        this.System = new index_1.default(wire);
        this.Window = new index_2.default(wire);
        this.Application = new index_3.default(wire);
        this.InterApplicationBus = new index_4.default(wire);
        this.Notification = new index_5.default(wire);
        this.Clipboard = new index_6.default(wire);
        this.ExternalApplication = new index_7.default(wire);
        this.ExternalWindow = new index_8.default(wire);
        this.Frame = new index_9.default(wire);
        this.GlobalHotkey = new index_10.default(wire);
        this.Platform = new index_12.default(wire, this.InterApplicationBus.Channel);
        this.View = new index_11.default(wire);
        this.me = me_1.getMe(wire);
        // Handle disconnect events
        wire.on('disconnected', () => {
            this.emit('disconnected');
        });
    }
}
exports.default = Fin;
